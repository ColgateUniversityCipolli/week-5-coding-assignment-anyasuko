\documentclass{article}
\usepackage[margin=1.0in]{geometry} % To set margins
\usepackage{amsmath}  % This allows me to use the align functionality.
                      % If you find yourself trying to replicate
                      % something you found online, ensure you're
                      % loading the necessary packages!
\usepackage{amsfonts} % Math font
\usepackage{fancyvrb}
\usepackage{hyperref} % For including hyperlinks
\usepackage[shortlabels]{enumitem}% For enumerated lists with labels specified
                                  % We had to run tlmgr_install("enumitem") in R
\usepackage{float}    % For telling R where to put a table/figure
\usepackage{natbib}        %For the bibliography
\bibliographystyle{apalike}%For the bibliography

\begin{document}
\begin{enumerate}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% QUESTION 1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item In Lab 3, you wrangled data from Essentia, Essentia models and LIWC. Rework your 
solution to Lab 3 using \texttt{tidyverse} \citep{tidyverse} instead of base \texttt{R}.
Specifically, rewrite your code for steps 1-4 of task 2 using \texttt{tidyverse} \citep{tidyverse}. 
Make sure to address any issues I noted in your code file, and ensure that your code 
runs in the directory as it is set up.
<<size="scriptsize", message=FALSE, warning=FALSE>>=
# Code to run here.
library(tidyverse)
library(stringr)
library(jsonlite)

######step 1
#step 1 part 1
current.filename <- "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
split <- current.filename %>% str_split("-")
artist <- split[[1]][1]
track <-split[[1]][2]
filename <-str_sub(split[[1]][3],,-6)

#step 1 part 3
data <- fromJSON("EssentiaOutput/The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json")

#step 1 part 4
clean <- function(data){
  overall.loudness = data$lowlevel$loudness_ebu128$integrated
  spectral.energy = data$lowlevel$spectral_energy$mean
  dissonance = data$lowlevel$dissonance$mean
  pitch.salience = data$lowlevel$pitch_salience$mean
  bpm = data$rhythm$bpm
  beats.loudness = data$rhythm$beats_loudness$mean
  danceability = data$rhythm$danceability
  tuning.frequency = data$tonal$tuning_frequency
  
  
  to.return <- data.frame(overall.loudness, spectral.energy, dissonance, pitch.salience, bpm, beats.loudness, danceability, tuning.frequency)
}

###### Step 2
list.of.filenames <- list.files("EssentiaOutput")%>%
  .[!endsWith(., ".csv")]

frame <- data.frame(overall.loudness = rep(x=NA, times=length(list.of.filenames)),
                    spectral.energy = rep(x=NA, times=length(list.of.filenames)),
                    dissonance = rep(x=NA, times=length(list.of.filenames)),
                    pitch.salience = rep(x=NA, times=length(list.of.filenames)),
                    bpm = rep(x=NA, times=length(list.of.filenames)),
                    beats.loudness = rep(x=NA, times=length(list.of.filenames)),
                    danceability = rep(x=NA, times=length(list.of.filenames)),
                    tuning.frequency = rep(x=NA, times=length(list.of.filenames)),
                    artist = rep(x=NA, times=length(list.of.filenames)),
                    album = rep(x=NA, times=length(list.of.filenames)),
                    track = rep(x=NA, times=length(list.of.filenames)))

for (i in 1:length(list.of.filenames)){
  split = str_split(list.of.filenames[i], "-", simplify=TRUE)
  to.sort <- fromJSON(paste0("EssentiaOutput/",list.of.filenames[i])) %>%
    clean() %>%
    mutate(
      curr.artist = split[1],
      curr.album = split[2],
      curr.track = str_sub(split[3], end=-6) 
    )
  frame[i,] <- to.sort
}

######step 3
#step 3 part 1
info <- read.csv("EssentiaOutput/EssentiaModelOutput.csv")%>%
  mutate(
    valence = rowMeans(.[,c("deam_valence", "emo_valence", "muse_valence")], na.rm=TRUE),
    arousal = rowMeans(.[,c("deam_arousal", "emo_arousal", "muse_arousal")], na.rm=TRUE),
    aggressive =rowMeans(.[,c("eff_aggressive","nn_aggressive")], na.rm=TRUE),
    happy =rowMeans(.[,c("eff_happy","nn_happy")], na.rm=TRUE),
    party =rowMeans(.[,c("eff_party","nn_party")], na.rm=TRUE),
    relaxed =rowMeans(.[,c("eff_relax","nn_relax")], na.rm=TRUE),
    sad =rowMeans(.[,c("eff_sad","nn_sad")], na.rm=TRUE),
    acoustic =rowMeans(.[,c("eff_acoustic","nn_acoustic")], na.rm=TRUE),
    electric =rowMeans(.[,c("eff_electronic","nn_electronic")], na.rm=TRUE),
    instrumental =rowMeans(.[,c("eff_instrumental","nn_instrumental")], na.rm=TRUE)
  )%>%
  rename(timbreBright = eff_timbre_bright) %>%
  select(artist,album,track,valence,arousal,aggressive,happy,party,relaxed,sad,acoustic,electric,instrumental,timbreBright)

######step 4
#step 4 part 1
lyrics <- read_csv("LIWCOutput/LIWCOutput.csv")

merged <- lyrics|>
  merge(info, by = c("artist", "album", "track"))|>
  merge(frame, by = c("artist", "album", "track"))%>%
  rename(, "funct"="function")
@
\end{enumerate}
\bibliography{bibliography}
\end{document}
